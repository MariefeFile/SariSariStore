<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Exit4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>